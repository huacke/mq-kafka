spring:
  redis:
    host: 192.168.0.109 #单节点模式
    port: 6379 #端口号
    database: 0
    password:   root   # 密码（默认为空）
    timeout: 60000  # 连接超时时长（毫秒）
    main:
      pool:
        max-active: 2000  # 连接池最大连接数（使用负值表示没有限制）
        max-wait: 2000      # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-idle: 500      # 连接池中的最大空闲连接
        min-idle: 8        # 连接池中的最小空闲连接
        time-between-eviction-runs: 3000000 #空闲连接回收的时间间隔
    sentinel:
      nodes: 192.168.0.109:26379,192.168.0.111:26379,192.168.0.100:26379
      master: master
    custom:
      useSentinel: true #哨兵模式   如果两个设置为false走的是单节点模式
      useCluster: false #集群模式
#  datasource:
#    type: com.alibaba.druid.pool.DruidDataSource
#    driverClassName: com.mysql.jdbc.Driver
#    druid:
#      master:  #主数据源
#        url: jdbc:mysql://192.168.0.109:3306/db?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&&useSSL=false&serverTimezone=Asia/Shanghai&useOldAliasMetadataBehavior=true
#        username: root
#        password: root
#      slave:  #从数据源
#        url: jdbc:mysql://192.168.0.111:3306/db?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&&useSSL=false&serverTimezone=Asia/Shanghai&useOldAliasMetadataBehavior=true
#        username: root
#        password: root
#      initial-size: 10
#      max-active: 100
#      min-idle: 10
#      max-wait: 60000
#      pool-prepared-statements: true
#      max-pool-prepared-statement-per-connection-size: 20
#      time-between-eviction-runs-millis: 60000
#      min-evictable-idle-time-millis: 300000
#      validation-query: SELECT 1 FROM DUAL
#      test-while-idle: true
#      test-on-borrow: false
#      test-on-return: false
#      stat-view-servlet:
#        enabled: true
#        url-pattern: /druid/*
        #login-username: admin
        #login-password: admin
#      filter:
#        stat:
#          log-slow-sql: true
#          slow-sql-millis: 1000
#          merge-sql: true
#        wall:
#          config:
#            multi-statement-allow: true
  kafka:
    producer:
      bootstrap-servers: 192.168.0.109:9092,192.168.0.111:9092,192.168.0.100:9092
      properties:
        sasl.mechanism: PLAIN
        sasl.username: root
        sasl.password: hq1qaz2wsx#E
        #sasl.jaas.config: /data/kafka/kafka_client_jaas.conf
        security.protocol: SASL_PLAINTEXT
    consumer:
      bootstrap-servers: 192.168.0.109:9092,192.168.0.111:9092,192.168.0.100:9092
      properties:
        sasl.mechanism: PLAIN
        sasl.username: root
        sasl.password: hq1qaz2wsx#E
        #sasl.jaas.config: /data/kafka/kafka_client_jaas.conf
        security.protocol: SASL_PLAINTEXT
  data:
    mongodb:
      uri: mongodb://mq:mq@192.168.0.109:23001,192.168.0.111:23001,192.168.0.100:23001/mq
      option:
        min-connection-per-host: 5
        max-connection-per-host: 100
        threads-allowed-to-block-for-connection-multiplier: 5
        server-selection-timeout: 25000
        max-wait-time: 15000
        max-connection-idle-time: 0
        max-connection-life-time: 0
        connect-timeout: 10000
        socket-timeout: 10000
        socket-keep-alive: false
        ssl-enabled: false
        ssl-invalid-host-name-allowed: false
        always-use-m-beans: false
        heartbeat-socket-timeout: 20000
        heartbeat-connect-timeout: 20000
        min-heartbeat-frequency: 500
        heartbeat-frequency: 10000
        local-threshold: 15



eureka:
  datacenter: mq
  environment: dev
  client:
    serviceUrl:
      defaultZone: http://admin:admin@192.168.0.109:8761/eureka/
